scalar DateTime

type Animal {
  id: ID!
  animal_name: String!
  category: Category!
  birthdate: DateTime!
  gender: Gender!
  owner: User!
  image: String!
  location: Location!
  listedDate: DateTime!
  weight: Float!
}

enum Gender {
  male
  female
}

type Location {
  type: String!
  coordinates: [Float]!
}

input Coordinates {
  lat: Float!
  lng: Float!
}

input LocationInput {
  type: String!
  coordinates: [Float]!
}

type Query {
  animals: [Animal]
  animalById(id: ID!): Animal
  animalsByArea(topRight: Coordinates!, bottomLeft: Coordinates!): [Animal]
  animalsByOwner(ownerId: ID!): [Animal]
}

input AnimalInput {
  animal_name: String!
  category: ID!
  birthdate: DateTime!
  gender: Gender!
  image: String!
  location: LocationInput!
  listedDate: DateTime!
  weight: Float!
}

input AnimalModify {
  animal_name: String
  category: ID
  birthdate: DateTime
  gender: Gender
  image: String
  location: LocationInput
  listedDate: DateTime
  weight: Float
}

type Mutation {
  addAnimal(animal: AnimalInput!): Animal
  modifyAnimal(id: ID!, animal: AnimalModify!): Animal
  deleteAnimal(id: ID!): Animal
}




