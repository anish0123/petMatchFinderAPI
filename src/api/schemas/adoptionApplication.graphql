scalar DateTime

type AdoptionApplication {
  id: ID!
  adopter: User!
  animal: Animal!
  appliedDate: DateTime!
  description: String!
  applicationStatus: ApplicationStatus
}
type Query {
  adoptionApplications: [AdoptionApplication]
  adoptionApplicationById(id: ID!): AdoptionApplication
  adoptionApplicationsByAnimal(animalId: ID!): [AdoptionApplication]
  adoptionApplicationsByAdopter(adopterId: ID!): [AdoptionApplication]
}

enum ApplicationStatus {
  pending
  approved
  rejected
}



input AdoptionApplicationInput {
  animal: ID!
  appliedDate: DateTime!
  description: String!
}
input AdoptionApplicationModify {
  animal: ID
  appliedDate: DateTime
  description: String
  applicationStatus: ApplicationStatus
}

type AdoptionApplicationMessage {
  message: String!
  adoptionApplication: AdoptionApplication
}

type Mutation {
  addAdoptionApplication(input: AdoptionApplicationInput!): AdoptionApplicationMessage!
  modifyAdoptionApplication(id: ID!, input: AdoptionApplicationModify!): AdoptionApplicationMessage!
  deleteAdoptionApplication(id: ID!): AdoptionApplicationMessage!
}
